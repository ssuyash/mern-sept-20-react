[{"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/index.js":"1","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/App.js":"2","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/reportWebVitals.js":"3","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Greet.js":"4","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/FirstComponent.js":"5","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Form.js":"6","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Balancesheet.js":"7","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Moviesearch.js":"8","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Calculator.js":"9"},{"size":500,"mtime":1612750924313,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1613443735380,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1612750924314,"results":"13","hashOfConfig":"11"},{"size":1337,"mtime":1612926046364,"results":"14","hashOfConfig":"11"},{"size":757,"mtime":1612750924312,"results":"15","hashOfConfig":"11"},{"size":1987,"mtime":1613098082689,"results":"16","hashOfConfig":"11"},{"size":5207,"mtime":1613011914923,"results":"17","hashOfConfig":"11"},{"size":2012,"mtime":1613356826937,"results":"18","hashOfConfig":"11"},{"size":1629,"mtime":1613444572512,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1ok0x6k",{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/index.js",[],["41","42"],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/App.js",["43","44","45"],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/reportWebVitals.js",[],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Greet.js",[],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/FirstComponent.js",[],["46","47"],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Form.js",[],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Balancesheet.js",["48","49"],"import React, { Component } from 'react'\n\nexport default class Balancesheet extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            amount: 0,\n            type: \"\",\n            remark: \"\",\n            transactions: []\n        }\n    }\n\n    saveTransaction = () => {\n        let { amount, type, remark, transactions } = this.state\n        \n        if(amount <= 0){\n            alert(\"invalid amount\")\n            return\n        }\n\n        if(type == \"\"){\n            alert(\"invalid transaction type\")\n            return\n        }\n\n        if(type == 'expense'){\n            let summary = this.getSummary()\n            let balance = summary.balance\n            if(balance < amount){\n                alert(\"invalid transaction, expense can not be more than balance.\")\n                return\n            }\n        }\n       \n\n        let newTrasaction = { amount, type, remark }\n        transactions.push(newTrasaction)\n        this.setState({ transactions, amount: 0, type: '', remark: '' })\n        alert(\"successfully saved\")\n        \n\n\n    }\n\n\n    getSummary = () => {\n        let txns = [...this.state.transactions]\n        let income = 0\n        let expense = 0\n\n        txns.forEach(e => {\n            if (e.type === 'income') {\n                income += parseInt(e.amount)\n            }\n            if (e.type === 'expense') {\n                expense += parseInt(e.amount)\n            }\n        })\n\n        return { income, expense, balance: (income - expense) }\n    }\n\n\n    render() {\n        let summary = this.getSummary()\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-3\">\n                        <input type=\"number\"\n                            value={this.state.amount}\n                            onChange={(e) => this.setState({ amount: e.target.value })}\n                            placeholder=\"amount\" className=\"form-control\" />\n                    </div>\n\n                    <div className=\"col-md-3\">\n                        <select\n                            value={this.state.type}\n                            onChange={(e) => this.setState({ type: e.target.value })}\n\n                            className=\"form-control\">\n                            <option value=\"\">select type</option>\n\n                            <option value=\"income\">income</option>\n                            <option value=\"expense\">expense</option>\n                        </select>\n                    </div>\n\n                    <div className=\"col-md-3\">\n                        <input\n                            value={this.state.remark}\n                            onChange={(e) => this.setState({ remark: e.target.value })}\n                            type=\"text\" placeholder=\"remark\" className=\"form-control\" />\n                    </div>\n\n                    <div className=\"col-md-3\">\n                        <button\n                            onClick={this.saveTransaction}\n                            className=\"btn btn-outline-primary btn-block\">Save</button>\n                    </div>\n                </div>\n\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-12\">\n                        <table className=\"table table-borderd\">\n                            <thead>\n                                <tr>\n                                    <th>Amount</th>\n                                    <th>Type</th>\n                                    <th>Remark</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {this.state.transactions.map((txn, ind) => {\n                                    return (<tr key={ind}>\n                                        <td>{txn.amount}</td>\n                                        <td>{txn.type}</td>\n                                        <td>{txn.remark}</td>\n                                    </tr>)\n                                })}\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n\n                <div className=\"row mt-5\">\n                    <div className=\"col-md-6\">\n                        <table className=\"table table-borderd\">\n                            <tbody>\n                                <tr>\n                                    <th>Total Income</th>\n                                    <td>{summary.income}</td>\n                                </tr>\n\n                                <tr>\n                                    <th>Total Expense</th>\n                                    <td>{summary.expense}</td>\n                                </tr>\n\n                                <tr>\n                                    <th>Balance</th>\n                                    <td>{summary.balance}</td>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n\n\n            </div>\n        )\n    }\n}\n\n\n//balance must not be negative\n//txn type must have one type, either income or expense\n","/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Moviesearch.js",[],"/Users/boby/Documents/classes/mern-sep-20/react/mernsept20/src/components/Calculator.js",["50","51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":12},{"ruleId":"56","severity":1,"message":"60","line":5,"column":8,"nodeType":"58","messageId":"59","endLine":5,"endColumn":20},{"ruleId":"56","severity":1,"message":"61","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":19},{"ruleId":"52","replacedBy":"62"},{"ruleId":"54","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":23,"column":17,"nodeType":"66","messageId":"67","endLine":23,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":28,"column":17,"nodeType":"66","messageId":"67","endLine":28,"endColumn":19},{"ruleId":"64","severity":1,"message":"65","line":26,"column":23,"nodeType":"66","messageId":"67","endLine":26,"endColumn":25},{"ruleId":"68","severity":1,"message":"69","line":27,"column":20,"nodeType":"70","messageId":"67","endLine":27,"endColumn":24},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Balancesheet' is defined but never used.","'Moviesearch' is defined but never used.",["71"],["72"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-eval","eval can be harmful.","CallExpression","no-global-assign","no-unsafe-negation"]